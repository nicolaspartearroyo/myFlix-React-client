var helpers = require("../../../../../../.nvm/versions/node/v14.16.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MovieCard", ()=>MovieCard
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactBootstrap = require("react-bootstrap");
var _reactRouterDom = require("react-router-dom");
var _movieCardScss = require("./movie-card.scss");
class MovieCard extends _reactDefault.default.Component {
    addFavorite() {
        const token = localStorage.getItem('token');
        const username = localStorage.getItem('user');
        _axiosDefault.default.post(`https:myflixbypartearroyo.herokuapp.com/users/${username}/movies/${this.props.movie._id}`, {
        }, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            alert(`Added to Favorites List`);
        }).catch(function(error) {
            console.log(error);
        });
    }
    render() {
        const { movie  } = this.props;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Container, {
            fluid: true,
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/movie-card/movie-card.jsx",
                lineNumber: 29
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card, {
            style: {
                border: 0
            },
            bg: "secondary",
            text: "white",
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/movie-card/movie-card.jsx",
                lineNumber: 31
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/movies/${movie._id}`,
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/movie-card/movie-card.jsx",
                lineNumber: 32
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Img, {
            className: "image-container",
            variant: "top",
            src: movie.ImageURL,
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/movie-card/movie-card.jsx",
                lineNumber: 33
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Body, {
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/movie-card/movie-card.jsx",
                lineNumber: 35
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            variant: "success",
            className: "fav-button overlay d-flex align-items-center justify-content-center",
            value: movie._id,
            onClick: (e)=>this.addFavorite(e, movie)
            ,
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/movie-card/movie-card.jsx",
                lineNumber: 37
            },
            __self: this
        }, "Add to Favorites")))));
    }
}
MovieCard.propTypes = {
    movie: _propTypesDefault.default.shape({
        Title: _propTypesDefault.default.string.isRequired,
        Description: _propTypesDefault.default.string.isRequired,
        ImageURL: _propTypesDefault.default.string.isRequired,
        Featured: _propTypesDefault.default.bool.isRequired
    }).isRequired
};

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}