var helpers = require("../../../../../../.nvm/versions/node/v14.16.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegistrationView", ()=>RegistrationView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _row = require("react-bootstrap/row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _reactRouterDom = require("react-router-dom");
var _registrationViewScss = require("./registration-view.scss");
var _s = $RefreshSig$();
function RegistrationView(props) {
    _s();
    const [name, setName] = _react.useState("");
    const [username, setUsername] = _react.useState("");
    const [password, setPassword] = _react.useState("");
    const [email, setEmail] = _react.useState("");
    const [birthdate, setBirthdate] = _react.useState("");
    const [nameError, setNameError] = _react.useState({
    });
    const [usernameError, setUsernameError] = _react.useState({
    });
    const [passwordError, setPasswordError] = _react.useState({
    });
    const [emailError, setEmailError] = _react.useState({
    });
    const [birthdateError, setBirthdateError] = _react.useState({
    });
    const handleSubmit = (e)=>{
        e.preventDefault();
        let setisValid = formValidation();
        if (setisValid) _axiosDefault.default.post('https://myflixbypartearroyo.herokuapp.com/users', {
            Name: name,
            Username: username,
            Password: password,
            Email: email,
            Birthdate: birthdate
        }).then((response)=>{
            const data = response.data;
            console.log(data);
            window.open('/', '_self'); // the second argument '_self' is necessary so that the page will open in the current tab
        }).catch((e1)=>{
            console.log('error registering the user');
        });
    };
    const formValidation = ()=>{
        let nameError1 = {
        };
        let usernameError1 = {
        };
        let passwordError1 = {
        };
        let emailError1 = {
        };
        let birthdateError1 = {
        };
        let isValid = true;
        if (name === '') {
            nameError1.nameEmpty = "Please enter your Name.";
            isValid = false;
        }
        if (username.trim().length < 4) {
            usernameError1.usernameShort = "Username incorrect. Use at least 4 characters.";
            isValid = false;
        }
        if (password.trim().length < 5) {
            passwordError1.passwordMissing = "Password incorrect. Use at least 5 characters.";
            isValid = false;
        }
        if (!(email && email.includes(".") && email.includes("@"))) {
            emailError1.emailNotEmail = "Email address incorrect.";
            isValid = false;
        }
        if (birthdate === '') {
            birthdateError1.birthdateEmpty = "Please enter your birthdate.";
            isValid = false;
        }
        setNameError(nameError1);
        setUsernameError(usernameError1);
        setPasswordError(passwordError1);
        setEmailError(emailError1);
        setBirthdateError(birthdateError1);
        return isValid;
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        className: "register justify-content-md-center",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 85
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 86
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formName",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 87
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 88
        },
        __self: this
    }, "Name:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        value: name,
        onChange: (e)=>setName(e.target.value)
        ,
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 89
        },
        __self: this
    }))), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formUsername",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 93
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 94
        },
        __self: this
    }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        value: username,
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 95
        },
        __self: this
    }), Object.keys(usernameError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            __source: {
                fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
                lineNumber: 98
            },
            __self: this
        }, usernameError));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 105
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formPassword",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 106
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 107
        },
        __self: this
    }, "Create Password:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "password",
        value: password,
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 108
        },
        __self: this
    }))), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 112
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formEmail",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 113
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 114
        },
        __self: this
    }, "Email:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "email",
        value: email,
        onChange: (e)=>setEmail(e.target.value)
        ,
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 115
        },
        __self: this
    }))), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formBirthdate",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 119
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 120
        },
        __self: this
    }, "Birthdate:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "date",
        value: birthdate,
        onChange: (e)=>setBirthdate(e.target.value)
        ,
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 121
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 124
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        type: "submit",
        onClick: handleSubmit,
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 125
        },
        __self: this
    }, "Submit"), ' ', /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 127
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "secondary",
        type: "button",
        __source: {
            fileName: "/Users/Neik/careerfoundry/movie_client/myFlix_client/src/components/registration-view/registration-view.jsx",
            lineNumber: 128
        },
        __self: this
    }, "Back")))));
}
_s(RegistrationView, "3u8vJonMzxrUEgL446HJCSLSbSI=");
_c = RegistrationView;
RegistrationView.propTypes = {
    register: _propTypesDefault.default.shape({
        Username: _propTypesDefault.default.string.isRequired,
        Password: _propTypesDefault.default.string.isRequired,
        Email: _propTypesDefault.default.string.isRequired,
        Birthdate: _propTypesDefault.default.string.isRequired
    })
};
var _c;
$RefreshReg$(_c, "RegistrationView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}