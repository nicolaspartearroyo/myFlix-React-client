"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _css3 = _interopRequireDefault(require("dom-helpers/css"));
var _querySelectorAll = _interopRequireDefault(require("dom-helpers/querySelectorAll"));
var _scrollbarSize = _interopRequireDefault(require("dom-helpers/scrollbarSize"));
var _ModalManager2 = _interopRequireDefault(require("react-overlays/ModalManager"));
var Selector = {
    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
    STICKY_CONTENT: '.sticky-top',
    NAVBAR_TOGGLER: '.navbar-toggler'
};
var BootstrapModalManager1 = /*#__PURE__*/ function(_ModalManager) {
    _inheritsLoose2.default(BootstrapModalManager2, _ModalManager);
    function BootstrapModalManager2() {
        return _ModalManager.apply(this, arguments) || this;
    }
    var _proto = BootstrapModalManager2.prototype;
    _proto.adjustAndStore = function adjustAndStore(prop, element, adjust) {
        var _css;
        var actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible
        // @ts-ignore
        element.dataset[prop] = actual;
        _css3.default(element, (_css = {
        }, _css[prop] = parseFloat(_css3.default(element, prop)) + adjust + "px", _css));
    };
    _proto.restore = function restore(prop, element) {
        var value = element.dataset[prop];
        if (value !== undefined) {
            var _css2;
            delete element.dataset[prop];
            _css3.default(element, (_css2 = {
            }, _css2[prop] = value, _css2));
        }
    };
    _proto.setContainerStyle = function setContainerStyle(containerState, container) {
        var _this = this;
        _ModalManager.prototype.setContainerStyle.call(this, containerState, container);
        if (!containerState.overflowing) return;
        var size = _scrollbarSize.default();
        _querySelectorAll.default(container, Selector.FIXED_CONTENT).forEach(function(el) {
            return _this.adjustAndStore('paddingRight', el, size);
        });
        _querySelectorAll.default(container, Selector.STICKY_CONTENT).forEach(function(el) {
            return _this.adjustAndStore('marginRight', el, -size);
        });
        _querySelectorAll.default(container, Selector.NAVBAR_TOGGLER).forEach(function(el) {
            return _this.adjustAndStore('marginRight', el, size);
        });
    };
    _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {
        var _this2 = this;
        _ModalManager.prototype.removeContainerStyle.call(this, containerState, container);
        _querySelectorAll.default(container, Selector.FIXED_CONTENT).forEach(function(el) {
            return _this2.restore('paddingRight', el);
        });
        _querySelectorAll.default(container, Selector.STICKY_CONTENT).forEach(function(el) {
            return _this2.restore('marginRight', el);
        });
        _querySelectorAll.default(container, Selector.NAVBAR_TOGGLER).forEach(function(el) {
            return _this2.restore('marginRight', el);
        });
    };
    return BootstrapModalManager2;
}(_ModalManager2.default);
exports.default = BootstrapModalManager1;
module.exports = exports["default"];
